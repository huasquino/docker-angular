# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DockerCompose@0
      displayName: 'Build Service Image'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Pay-As-You-Go(dfcbd63f-14e6-4a4c-baac-5a2b901bc97a)'
        azureContainerRegistry: '{"loginServer":"contenedorregistrodesarrollo.azurecr.io", "id" : "/subscriptions/dfcbd63f-14e6-4a4c-baac-5a2b901bc97a/resourceGroups/Desarrollo/providers/Microsoft.ContainerRegistry/registries/ContenedorRegistroDesarrollo"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
        additionalImageTags: '$(Build.BuildId)'
        includeLatestTag: true
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Pay-As-You-Go(dfcbd63f-14e6-4a4c-baac-5a2b901bc97a)'
        azureContainerRegistry: '{"loginServer":"contenedorregistrodesarrollo.azurecr.io", "id" : "/subscriptions/dfcbd63f-14e6-4a4c-baac-5a2b901bc97a/resourceGroups/Desarrollo/providers/Microsoft.ContainerRegistry/registries/ContenedorRegistroDesarrollo"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        includeLatestTag: true
        additionalImageTags: '$(Build.BuildId)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: replacetokens@3
      inputs:
        targetFiles: '**/*.yml'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: true
        tokenPrefix: '#{'
        tokenSuffix: '}#'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'KuberConnection'
        namespace: 'default'
        manifests: './deployment.yml'
    
